{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joel\\\\VS Code Projects\\\\Moosic2\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = \"69df94900568478790af02c965324d0f\";\nconst REDIRECT_URI = \"http://localhost:3000/\";\nconst AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\nconst SCOPES = [\"playlist-modify-public\", \"playlist-modify-private\", \"playlist-read-private\", \"playlist-read-collaborative\"];\nconst SCOPES_URL = SCOPES.join(\"%20\");\nexport const AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n\n    //if we don't have a token and the hash is set\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(element => element.startsWith(\"access_token\")).split(\"=\")[1];\n\n      //store token in local storage\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n      setToken(token);\n    }\n  }, []);\n  const login = () => {\n    console.log(\"THIS IS RUNNING\");\n    const authUrl = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES_URL}&response_type=${RESPONSE_TYPE}`;\n    window.location.replace(authUrl);\n  };\n  const logout = () => {\n    setToken(null);\n    window.localStorage.removeItem(\"token\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"uRWVyxPfKU3Lv5uAeNftFtP/ZvU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","SCOPES","SCOPES_URL","join","AuthContext","AuthProvider","children","_s","token","setToken","hash","window","location","localStorage","getItem","substring","split","find","element","startsWith","setItem","login","console","log","authUrl","RESPONSE_TYPE","replace","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Joel/VS Code Projects/Moosic2/src/AuthContext.js"],"sourcesContent":["import React, {createContext, useEffect, useState} from \"react\";\r\n\r\n\r\nconst CLIENT_ID = \"69df94900568478790af02c965324d0f\";\r\nconst REDIRECT_URI = \"http://localhost:3000/\";\r\nconst AUTH_ENDPOINT = \"https://accounts.spotify.com/authorize\";\r\nconst SCOPES = [\"playlist-modify-public\", \"playlist-modify-private\", \"playlist-read-private\", \"playlist-read-collaborative\"];\r\nconst SCOPES_URL = SCOPES.join(\"%20\");\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({children}) => {\r\n    const [token, setToken] = useState(\"\");\r\n    useEffect(() => {\r\n        const hash = window.location.hash;\r\n        let token = window.localStorage.getItem(\"token\");\r\n        \r\n        //if we don't have a token and the hash is set\r\n        if (!token && hash) {\r\n            token = hash.substring(1).split(\"&\").find(element => element.startsWith(\"access_token\")).split(\"=\")[1];\r\n\r\n            //store token in local storage\r\n            window.location.hash = \"\";\r\n            window.localStorage.setItem(\"token\", token);\r\n            setToken(token);\r\n        }\r\n    }, []);\r\n\r\n    const login = () => {\r\n        console.log(\"THIS IS RUNNING\");\r\n        const authUrl = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&scope=${SCOPES_URL}&response_type=${RESPONSE_TYPE}`;\r\n        window.location.replace(authUrl);\r\n    }\r\n\r\n    const logout = () => {\r\n        setToken(null);\r\n        window.localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{login, logout}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhE,MAAMC,SAAS,GAAG,kCAAkC;AACpD,MAAMC,YAAY,GAAG,wBAAwB;AAC7C,MAAMC,aAAa,GAAG,wCAAwC;AAC9D,MAAMC,MAAM,GAAG,CAAC,wBAAwB,EAAE,yBAAyB,EAAE,uBAAuB,EAAE,6BAA6B,CAAC;AAC5H,MAAMC,UAAU,GAAGD,MAAM,CAACE,IAAI,CAAC,KAAK,CAAC;AAErC,OAAO,MAAMC,WAAW,gBAAGX,aAAa,CAAC,CAAC;AAE1C,MAAMY,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IACZ,MAAMgB,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACF,IAAI;IACjC,IAAIF,KAAK,GAAGG,MAAM,CAACE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;IAEhD;IACA,IAAI,CAACN,KAAK,IAAIE,IAAI,EAAE;MAChBF,KAAK,GAAGE,IAAI,CAACK,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,UAAU,CAAC,cAAc,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAEtG;MACAL,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAG,EAAE;MACzBC,MAAM,CAACE,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;MAC3CC,QAAQ,CAACD,KAAK,CAAC;IACnB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,KAAK,GAAGA,CAAA,KAAM;IAChBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,MAAMC,OAAO,GAAG,GAAGxB,aAAa,cAAcF,SAAS,iBAAiBC,YAAY,UAAUG,UAAU,kBAAkBuB,aAAa,EAAE;IACzId,MAAM,CAACC,QAAQ,CAACc,OAAO,CAACF,OAAO,CAAC;EACpC,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACjBlB,QAAQ,CAAC,IAAI,CAAC;IACdE,MAAM,CAACE,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;EAC3C,CAAC;EAED,oBACI/B,OAAA,CAACO,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAACT,KAAK;MAAEM;IAAM,CAAE;IAAArB,QAAA,EACxCA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAA3B,EAAA,CAjCKF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}