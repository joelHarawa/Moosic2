{"ast":null,"code":"// Title: SearchComponent.js\n// Author: Joel Harawa\nimport React,{useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import styled,{keyframes}from\"styled-components\";import Loading from\"./Loading\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const SearchComponent=()=>{// State variables\nconst[filteredMoods,setFilteredMoods]=useState({});const[moodData,setMoodData]=useState({});const[searchInput,setSearchInput]=useState(\"\");const[user,setUser]=useState(\"Guest\");const[userID,setUserID]=useState(\"\");// const [generating, setGenerating] = useState(false);\nconst navigate=useNavigate();useEffect(()=>{const apiUrl=\"http://localhost:4000/api/get/moods\";// Get the user moods from the backend, update state variable\nconst getMoods=async()=>{try{// Fetch request to get the moods from the backend\nconst response=await fetch(apiUrl);if(response.ok){const data=await response.json();setMoodData(Object.keys(data.moods));}else{throw new Error(\"Failed to fetch moods\");}}catch(error){console.error(\"Error getting the moods from the user\",error);}};getMoods();},[]);useEffect(()=>{// Get the user profile, upadate user profile state variable\nconst getUserProfile=async()=>{try{const apiUrl=\"http://localhost:4000/api/auth/user\";const response=await fetch(apiUrl,{method:\"GET\",credentials:\"include\"});if(response.status===200){const rawData=await response.json();const data=JSON.parse(rawData);setUser(data.display_name);setUserID(data.id);console.log(data);}}catch(error){}};getUserProfile();},[]);// Generate the user's desired playlist on their Sp\nconst generatePlaylist=async mood=>{try{if(user!==\"Guest\"){const apiUrl=\"http://localhost:4000/api/post/generate\";const response=await fetch(apiUrl,{method:\"POST\",headers:{'Content-Type':'application/json'},body:JSON.stringify({userMood:mood,userID:userID}),credentials:\"include\"}).then(response=>response.json()).then(data=>{console.log(data);if(data.message){navigate(`view/${data.message}`);}}).catch(error=>{console.error('Error:',error);});}else{login();}}catch(error){console.error(error);}};// Update results in the dropdown menu when searching for emotions\nconst handleSearch=input=>{setSearchInput(input);console.log(filteredMoods);if(!moodData||moodData.length<=0){console.error(\"moods is not an array\");return{};}const filtered=moodData.filter(mood=>mood.toLowerCase().includes(input.toLowerCase()));setFilteredMoods(filtered);};return/*#__PURE__*/_jsxs(SearchBox,{children:[/*#__PURE__*/_jsx(Greeting,{children:/*#__PURE__*/_jsxs(GreetingText,{children:[\"Hi \",user,\", How are we feeling today?\"]})}),/*#__PURE__*/_jsx(SearchArea,{children:/*#__PURE__*/_jsx(SearchBar,{placeholder:\"Enter your mood...\",onChange:e=>handleSearch(e.target.value)})}),/*#__PURE__*/_jsx(Dropdown,{children:searchInput.length>0&&filteredMoods.length>0?filteredMoods.map((mood,index)=>/*#__PURE__*/_jsx(Result,{onClick:()=>generatePlaylist(mood),children:mood},index)):\"\"})]});};const AnimationName=keyframes`\n    0% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n    100% { background-position: 0% 50%; }\n`;const SearchBox=styled.div`\n    margin-top: 5%;\n    display: flex;\n    flex-direction: column;\n    height: 25%;\n    width: 50%;\n    border-radius: 25px;\n    background-color: #2B2B2B;\n`;const Greeting=styled.div`\n    display: flex;\n    margin: 10px;\n    width: 100%;\n    height: 60%;\n`;const GreetingText=styled.a`\n    font-family: \"Poppins\", system-ui;\n    font-size: 2.5em;\n    color: #4717F6;\n    padding-left: 25px;\n    padding-right: 25px;\n`;const SearchArea=styled.div`\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    height: 40%;\n`;const SearchBar=styled.input`\n    font-family: \"Poppins\", system-ui;\n    width: 90%;\n    height: 30%;\n    padding: 10px;\n    border: none;\n    border-radius: 25px;\n    font-size: 1.5em;\n    background-color: #2B2B2B;\n    color: #A239CA;\n    outline: none;\n    margin-top: 2%;\n`;const Dropdown=styled.ul`\n    margin-top: 2.5%;\n    width: 90%;\n    list-style: none;\n    padding-left: 0vh;\n    background-color: #2B2B2B;\n    border-radius: 25px;\n    margin-left: 5%;\n`;const Result=styled.li`\n    font-family: \"Poppins\", system-ui;\n    color: #A239CA;\n    font-size: 1.5em;\n    padding: 10px;\n    border-radius: 25px;\n    margin: 0;\n    &:hover {\n        text-decoration: none;\n        color: white;\n        cursor: pointer;\n        background: linear-gradient(270deg, #4717F6, #0E023A);\n        background-size: 200% 200%;\n        animation: ${AnimationName} 1s ease;\n    }\n`;const Generating=styled.h1`\n    font-family: \"Poppins\", system-ui;\n    color: #4717F6;\n`;export default SearchComponent;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","styled","keyframes","Loading","jsxs","_jsxs","jsx","_jsx","SearchComponent","filteredMoods","setFilteredMoods","moodData","setMoodData","searchInput","setSearchInput","user","setUser","userID","setUserID","navigate","apiUrl","getMoods","response","fetch","ok","data","json","Object","keys","moods","Error","error","console","getUserProfile","method","credentials","status","rawData","JSON","parse","display_name","id","log","generatePlaylist","mood","headers","body","stringify","userMood","then","message","catch","login","handleSearch","input","length","filtered","filter","toLowerCase","includes","SearchBox","children","Greeting","GreetingText","SearchArea","SearchBar","placeholder","onChange","e","target","value","Dropdown","map","index","Result","onClick","AnimationName","div","a","ul","li","Generating","h1"],"sources":["C:/Users/Joel/VS Code Projects/Moosic2/src/components/SearchComponent.js"],"sourcesContent":["// Title: SearchComponent.js\r\n// Author: Joel Harawa\r\n\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst SearchComponent = () => {\r\n    // State variables\r\n    const [filteredMoods, setFilteredMoods] = useState({});\r\n    const [moodData, setMoodData] = useState({});\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [user, setUser] = useState(\"Guest\");\r\n    const [userID, setUserID] = useState(\"\");\r\n    // const [generating, setGenerating] = useState(false);\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        const apiUrl = \"http://localhost:4000/api/get/moods\";\r\n        // Get the user moods from the backend, update state variable\r\n        const getMoods = async () => {\r\n            try {\r\n                // Fetch request to get the moods from the backend\r\n                const response = await fetch(apiUrl);\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setMoodData(Object.keys(data.moods));\r\n                } else {\r\n                    throw new Error(\"Failed to fetch moods\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error getting the moods from the user\", error);\r\n            }\r\n        }\r\n        getMoods();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Get the user profile, upadate user profile state variable\r\n        const getUserProfile = async () => {\r\n            try {\r\n                const apiUrl = \"http://localhost:4000/api/auth/user\";\r\n                const response = await fetch(apiUrl, {\r\n                    method: \"GET\",\r\n                    credentials: \"include\"\r\n                });\r\n                if (response.status === 200) {\r\n                    const rawData = await response.json();\r\n                    const data = JSON.parse(rawData);\r\n                    setUser(data.display_name);\r\n                    setUserID(data.id);\r\n                    console.log(data);\r\n                }\r\n            } catch (error) {\r\n            }\r\n        }\r\n        getUserProfile();\r\n    }, []);\r\n    \r\n    // Generate the user's desired playlist on their Sp\r\n    const generatePlaylist = async (mood) => {\r\n        try {\r\n            if (user !== \"Guest\") {\r\n                const apiUrl = \"http://localhost:4000/api/post/generate\";\r\n                const response = await fetch(apiUrl, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userMood: mood,\r\n                        userID: userID\r\n                    }),\r\n                    credentials: \"include\"\r\n                })\r\n                .then(response => response.json())  \r\n                .then(data => {\r\n                    console.log(data);\r\n                    if (data.message) {\r\n                        navigate(`view/${data.message}`);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                });\r\n            } else {\r\n                login();\r\n            } \r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    // Update results in the dropdown menu when searching for emotions\r\n    const handleSearch = (input) => { \r\n        setSearchInput(input);\r\n        console.log(filteredMoods);\r\n        if (!moodData || moodData.length <= 0) {\r\n            console.error(\"moods is not an array\");\r\n            return {};  \r\n        }\r\n        const filtered = moodData.filter((mood) =>\r\n            mood.toLowerCase().includes(input.toLowerCase())\r\n        );\r\n    \r\n        setFilteredMoods(filtered);\r\n    }\r\n\r\n    return (\r\n        <SearchBox>\r\n            <Greeting>\r\n                <GreetingText>\r\n                    Hi {user}, How are we feeling today?\r\n                </GreetingText>\r\n            </Greeting>\r\n            <SearchArea>\r\n            <SearchBar \r\n                placeholder=\"Enter your mood...\"\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n            </SearchArea>\r\n                <Dropdown>\r\n                    {\r\n                        searchInput.length > 0 && filteredMoods.length > 0 ? (\r\n                            filteredMoods.map((mood, index) => (\r\n                                <Result key={index} onClick={() => generatePlaylist(mood)}>\r\n                                        {mood}\r\n                                </Result>\r\n                            ))\r\n                        ) : \"\"\r\n                    }\r\n                </Dropdown>\r\n        </SearchBox>\r\n    )\r\n}\r\n\r\nconst AnimationName = keyframes`\r\n    0% { background-position: 0% 50%; }\r\n    50% { background-position: 100% 50%; }\r\n    100% { background-position: 0% 50%; }\r\n`;\r\n\r\nconst SearchBox = styled.div`\r\n    margin-top: 5%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 25%;\r\n    width: 50%;\r\n    border-radius: 25px;\r\n    background-color: #2B2B2B;\r\n`;\r\n\r\nconst Greeting = styled.div`\r\n    display: flex;\r\n    margin: 10px;\r\n    width: 100%;\r\n    height: 60%;\r\n`;\r\n\r\nconst GreetingText = styled.a`\r\n    font-family: \"Poppins\", system-ui;\r\n    font-size: 2.5em;\r\n    color: #4717F6;\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n`;\r\n\r\nconst SearchArea = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 40%;\r\n`;\r\n\r\nconst SearchBar = styled.input`\r\n    font-family: \"Poppins\", system-ui;\r\n    width: 90%;\r\n    height: 30%;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 25px;\r\n    font-size: 1.5em;\r\n    background-color: #2B2B2B;\r\n    color: #A239CA;\r\n    outline: none;\r\n    margin-top: 2%;\r\n`;\r\n\r\nconst Dropdown = styled.ul`\r\n    margin-top: 2.5%;\r\n    width: 90%;\r\n    list-style: none;\r\n    padding-left: 0vh;\r\n    background-color: #2B2B2B;\r\n    border-radius: 25px;\r\n    margin-left: 5%;\r\n`;\r\n\r\nconst Result = styled.li`\r\n    font-family: \"Poppins\", system-ui;\r\n    color: #A239CA;\r\n    font-size: 1.5em;\r\n    padding: 10px;\r\n    border-radius: 25px;\r\n    margin: 0;\r\n    &:hover {\r\n        text-decoration: none;\r\n        color: white;\r\n        cursor: pointer;\r\n        background: linear-gradient(270deg, #4717F6, #0E023A);\r\n        background-size: 200% 200%;\r\n        animation: ${AnimationName} 1s ease;\r\n    }\r\n`;\r\n\r\nconst Generating = styled.h1`\r\n    font-family: \"Poppins\", system-ui;\r\n    color: #4717F6;\r\n`;\r\n\r\nexport default SearchComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}